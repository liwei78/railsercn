---
layout: post
title: 1.2.1 类和模块
post_id: 108
categories: ["default"]
---

{% include JB/setup %}

---

类（class）和模块（module）是Ruby面向对象编程的基础。类主要负责封装及分离事物。模块则用于mixin——将一系列功能打包添加到类上为该类增加新行为，可以代替多重继承。模块也可用来将类分隔到不同的命名空间中。

在Ruby中，每个类名都是一个常量，因此Ruby要求类名必须以大写字母开始。此常量代表类对象，也就是一个Class类的对象，但它区别于“Class”对象，后者表示真正的Class类。当我们说“class object”（小写的c）的时候是指任何一个表示类的对象（包括Class自己）。当我们说“Class object”（大写的C）的时候是指Class 类，它是所有类对象的超类。
注：如果我们还不够迷糊的话——Class对象也有Class类。

Class类继承自Module类；每个类也都是一个模块。但是有个非常重要的区别。类不能mixin到其它类中，也不能扩展对象；只有模块可以这么做。