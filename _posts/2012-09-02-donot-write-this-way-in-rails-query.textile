---
layout: post
title: Rails不要这么写查询了
post_id: 765
categories: ["rails"]
author: 里克
---

周末2天，升级客户程序的代码。这次升级要解决性能问题，因为项目用了很久，工作日期间mysql的cpu消耗率一直很高，log里已经出现miss cache 的提示。这次要彻底查出问题。

表面上看，sql的反复查询是个问题，如下：

这是未修正前的/users/5的查询

<a href="/wp-content/uploads/snapshot-2012-09-02-03.01.26.png"><img src="/wp-content/uploads/snapshot-2012-09-02-03.01.26.png" alt="" width="520" height="270" /></a>

之前我可以很无视这个cache，这不是rails的特点么，在我翻译的文章里，我觉得这是很酷的地方。可是，当mysql消耗掉cpu 90% 的性能时，这个cache真不让人乐观的以为它会起到作用。于是决定：去掉cache的部分。

如何去掉，就是用controller变量来取代实例查询，一次查询，整个page都引用它。

接着，运行全部的页面测试，看是否有遗漏。没有测试？好吧，我用了很久才把测试都加上。使用的是rails自己的测试。rake test:functionals

接下来一个问题，是这篇文章的关键。

<a href="/wp-content/uploads/snapshot-2012-09-02-03.16.01.png"><img src="/wp-content/uploads/snapshot-2012-09-02-03.16.01.png" alt="" width="1003" height="176" /></a>


两个粉色的字体，同样的操作，这是重复的事情，却是如何出现的？

原来，答案在model里。

self.user_messages.present? ? self.user_messages.unread.count : 0

这种写法当然很rails，可是确造成了多余的浪费，对于大量浏览的user show页面，mysql的负载可想而知。

改成下面的写法
UserMessage.count(:conditions => ["user_id = ? and read = ?", self.id, false])

页面的sql查询终于达到我的期望了。如下

<a href="/wp-content/uploads/snapshot-2012-09-02-03.22.54.png"><img src="/wp-content/uploads/snapshot-2012-09-02-03.22.54.png" alt="" width="792" height="150" /></a>


一条用户查询，一条查询未读信息，一条分页显示。

这个笔记的目的是，提醒自己和开发Rails的朋友，不要太多依赖Rails的美感，关键页面，性能最重要。


