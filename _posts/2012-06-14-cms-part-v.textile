---
layout: post
title: cms系列五：一饮东坡醒复醉
post_id: 734
categories: ["cms", "default"]
---

snapshot

写在前面：

前面写了四篇介绍Rails cms的文章，分别是
<ul>
	<li><a title="cms系列四：输赢成败，又争由人算" href="http://railser.cn/blog/cms-part-iv">cms系列四：输赢成败，又争由人算</a></li>
	<li><a title="cms系列三：长安古道马迟迟" href="http://railser.cn/blog/cms-part-iii">cms系列三：长安古道马迟迟</a></li>
	<li><a title="cms系列二：塞下秋来风景异" href="http://railser.cn/blog/cms-part-ii">cms系列二：塞下秋来风景异</a></li>
	<li><a title="cms系列一：东风夜放花千树" href="http://railser.cn/blog/cms-part-i">cms系列一：东风夜放花千树</a></li>
</ul>

里面涉及的cms来自《<a href="http://blog.arunace.com/12-ruby-on-rails-content-management-systems-cms/" target="_blank">12个基于Rails框架的CMS系统推荐</a>》，<a href="http://www.iteye.com/news/23222" target="_blank">中文翻译在这里</a> 。

<a href="/wp-content/uploads/2008328153753877_2.jpg"><img src="/wp-content/uploads/2008328153753877_2.jpg" alt="" width="500" height="333" /></a>

之前有个Q友问过我cms的事情，还发给过我他设计的cms结构。我看完之后只有2点意见，一是把“友情链接”改成“连接管理”，一是"广告管理"改成“展示单元管理”。

原因很简单，cms不能把功能写固定了。“友情链接”仅限于连接交换等，这个概念存在于至少十年以上，在很多人的概念里根深蒂固。但是，他不是cms的组成部分。“广告”也是如此，cms不是为友情和广告服务的。

cms是管理网站资源的。

网站的资源有哪些？A：文章，B：用户，C：图片，D：文件，E：评论，F：页面，这是到多选题，你选哪些作为cms的资源呢？

A：文章，入选。只要它有内容，即便没有标题，也是当做文章，进入Article表，作为管理的第一内容。

B：用户，不选。用户系统是单独的系统，不是吗？尤其加上OpenID之后，用户的管理更加的独立于cms。

C：图片，入选。

D：文件，入选。

E：评论，不选。它虽然附属到其他资源上，但是由于评论的审核，显示，性能等原因，它也应该独立出去。

F：页面，入选。

对于Rails cms，该如何管理所有的资源呢？plugin更适合去做B和E的管理。cms做好A，C，D，F的组织。

上面的描述，适合做小型网站，如果是一个大型站点，该如何进一步设计呢？

<a href="/wp-content/uploads/2133640_101557004797_2.jpg"><img src="/wp-content/uploads/2133640_101557004797_2.jpg" alt="" width="350" height="335" /></a>


问题一：目前的项目是一个综合门户网站，含有大量新闻资讯，文章，图片，视频（含连接）等。该如何用cms管理这个门户网站？

问题二：如果cms支持多站点，又该如何设计呢？

我的考虑：

1、全站html静态化。这个特点来自dede的长期使用，静态化的优点不用多说。

2、独立的评论模块。其实只要一个唯一的url，就可以显示它的评论了。评论的ajax加载，审核，添加，显示等要求，没必要交给cms去处理。评论的独立，也减少了垃圾评论攻击导致cms的性能下降。

3、独立的用户模块。sns热起来之后，很多人更加关注人与人，人与资源之间的互动。对于资源，用户需要做的是分享，对于人，用户需要关注。（关注后，用户需要得到关注资源的动态。）

4、plugin支持。最近研究redmine，现在研究cms，对plugin的使用更加有体会。

5、多站点与单站点。cms应该支持多站点，但是具体实现方案，如编辑器，图文混排，文件上传，模版编辑等，还可以作为单站点使用方案。

6、云平台部署。这是最深刻的一点，如何快速的利用云平台资源，如盛大云，将站点快速的让客户看到，使用到，是cms应该解决的。很多cms只卖代码，但是像locomotive cms，即卖代码，又提供hosting解决方案，是我个人倾向的模式。

7、私有代码库。我认为，对于一个服务型的项目，私有的代码库可以最大程度避免误操作，可以让代码人员不必关心业务部分，而直接升级主体代码，还可以让整体开发流程更易于控制。

8、开发者社区。开发者是容易孤独的群体，围绕cms，拥有一个活跃的开发者社区，会让参与的人快乐一点，不是吗？

9、开发者在线交易平台。作为开发者，任何一个开发出来的作品，只要符合开发标准，就可以在开放平台交易。这里需要解决的是，标准的制定。

10、教学平台。4月份的北京之行，让我更坚信这个教学平台的意义。

声明：以上观点，出于个人承接的项目对cms的需求，以及个人在工作中的经验思考，总结而来。仅作参考。

<a href="/wp-content/uploads/0140760085.jpg"><img src="/wp-content/uploads/0140760085.jpg" alt="" width="360" height="360" /></a>


写到这里，对cms的想法差不多写完了。这5篇系列的文章，属于李玮个人原创，如有转载，请注明出处为“里克的自习室”。感谢您对Rails的支持。

最后再送给大家一首词，以供消遣。

秦观，《如梦令》

莺嘴啄花红溜，燕尾点波绿皱。指冷玉笙寒，吹彻小梅春透。依旧，依旧，人与绿杨俱瘦。

李清照的《如梦令》大家都熟悉，时间上，秦观去世的时候，李清照刚刚16岁。